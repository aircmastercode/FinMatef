version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - COGNEE_API_KEY=${COGNEE_API_KEY}
      - COGNEE_API_URL=${COGNEE_API_URL}
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - VECTOR_DB_URI=${VECTOR_DB_URI}
      - VECTOR_DB_API_KEY=${VECTOR_DB_API_KEY}
      - SEARCH_API_KEY=${SEARCH_API_KEY}
      - SEARCH_ENGINE_ID=${SEARCH_ENGINE_ID}
    volumes:
      - ./backend_new:/app
      - ./data:/app/data
    depends_on:
      - redis
      - neo4j
    restart: unless-stopped

  # Redis for memory and session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped

  # Neo4j graph database (if running locally)
  neo4j:
    image: neo4j:5
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-password}
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    restart: unless-stopped

  # Frontend service (uncomment to enable)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  redis-data:
  neo4j-data:
  neo4j-logs: 